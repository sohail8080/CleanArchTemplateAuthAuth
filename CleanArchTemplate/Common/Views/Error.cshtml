@model System.Web.Mvc.HandleErrorInfo

@{
    ViewBag.Title = "Error";
}

<h1 class="text-danger">Error.</h1>
@{
    if (String.IsNullOrEmpty(ViewBag.errorMessage))
    {
        <h2 class="text-danger">An error occurred while processing your request.</h2>
    }
    else
    {
        <h2 class="text-danger">@ViewBag.errorMessage</h2>
    }
}

@*
        There are 6 scenarios that I can think of where an ASP.NET MVC3 apps
        can generate 404s.


    Generated by ASP.NET:
    Scenario 1: >>URL does not match a route in the route table.

    Generated by ASP.NET MVC:
    Scenario 2: URL matches a route, but >>CONTROLLER DOES NOT EXIST.
    Scenario 3: URL matches a route, but >>CONTROLLER ACTION DOES NOT EXIST..

    Manually generated in cont. action code:
    Scenario 4: An cont. action returns an >>HttpNotFoundResult by using the method HttpNotFound().
    Scenario 5: An cont. action throws an >>HttpException with the status code 404.
    Scenario 6: An cont. actions manually modifies the >>Response.StatusCode property to 404.

    Scenario 7: Static Resource does not exist

    404 ERROR SHOULD BE HANDLED WITH FOLLOWING Objectives

    (A) Show a custom 404 error page to the user.

    (B) Maintain the 404 status code on the client response (specially important for SEO).

    (C) Send the response directly, without involving a 302 redirection.*@