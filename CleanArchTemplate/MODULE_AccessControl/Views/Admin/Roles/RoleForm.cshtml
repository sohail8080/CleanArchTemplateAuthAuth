@model CleanArchTemplate.AccessControl.ViewModels.RoleFormViewModel
@{
    ViewBag.Title = Model.Title;
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Save", "Roles", routeValues: new { area = "AccessControl" }, method: FormMethod.Post, htmlAttributes: new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <h4>Add a new Role to the application.</h4>
    <hr />
    if (ViewBag.Message != null && ViewBag.Message != string.Empty)
    {
        @ViewBag.Message
    }

    @*
    @Html.ValidationSummary(true)
    true to have the summary display model-level errors only, or false to have the
    Summary display all errors.
    *@

    @Html.ValidationSummary("", new { @class = "text-danger" })


    <div class="form-group">
        @Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Name);
        </div>
    </div>

    @Html.HiddenFor(m => m.Id)
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-primary" value="Save" />
            @Html.ActionLink("Cancel", "List", "Roles", routeValues: new { area = "AccessControl" }, htmlAttributes: new { id = "listRoleLink", @class = "btn btn-primary" })
        </div>
    </div>

    @*<p> Enter User Role Name:</p>

        @Html.EditorFor(m => m.Name)
        <input type="submit" value="Create Role" />*@
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}